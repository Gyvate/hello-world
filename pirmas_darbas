<!DOCTYPE html>
<html>
<head>
    <canvas id="FirstTask" width="700" height="450"></canvas>
    <script>
        window.requestAnimFrame = (function(callback) {
          return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||
          function(callback) {
            window.setTimeout(callback, 1000 / 60);
          };
        })();
		//constructor for gear 
        function gear(config){
          this.x = config.x;                          // X position
          this.y = config.y;                          // Y position
          this.radiusO = config.radiusO;              // Outter radius
          this.radiusI = config.radiusI;              // Inner radius
          this.teethNUM = config.teethNUM;            // number of teeths
          this.theta = config.theta;                  // theta
          this.thetaSpeed = config.thetaSpeed / 1000; // theta Speed
          this.color = config.color;                  // color
          this.spinning = config.spinning;            // boolean to spin or not
          this.clockwise = config.clockwise;          // boolean clockwise spin or not
        }
        //gear drawing
        gear.prototype.draw = function(){
          var canvas = document.getElementById('FirstTask');
          var context = canvas.getContext('2d');		  
		      context.save();
          var numPoints = this.teethNUM * 2;         
          context.beginPath();
          context.LineJoin = 'round';         
          for(var n = 0; n < numPoints; n++){            
            var radius = null;
            if(n % 2 == 0){
              radius = this.radiusO;
            }
            else{
              radius = this.radiusI;
            }
            var theta = this.theta;
            theta += ((Math.PI*2) / numPoints) * (n + 1);
            var x = (radius * Math.sin(theta)) + this.x; 
            var y = (radius * Math.cos(theta)) + this.y;
            if(n == 0){
              context.moveTo(x, y);
            }
            else{
              context.lineTo(x, y);
            }
          }
          context.closePath();
          context.fillStyle = this.color;
          context.fill();
        } ;
        
        function rotating(gears, lastTime){
          var canvas = document.getElementById('FirstTask');
          var context = canvas.getContext('2d');
          var time = (new Date()).getTime();
          var timeDiff = time - lastTime;
          for(var i = 0; i < gears.length; i++){
            var gear = gears[i];
            if(gears[i].spinning){
              if(gears[i].clockwise){
                gears[i].theta -= (gear.thetaSpeed * timeDiff);
              }
              else{
                gears[i].theta += (gear.thetaSpeed * timeDiff);
              }
            }
          }
          context.clearRect(0, 0, canvas.width, canvas.height);
          for(var i = 0; i < gears.length; i++){
            gears[i].draw();
          }
          requestAnimFrame(function(){
            rotating(gears,time);
          });
        }
        var gears = [];
        //red 20 teeth
        gears.push(new gear({
          x: 450,
          y: 105,
          radiusO: 70,
          radiusI: 60,
          teethNUM: 20,
          theta: 0,
          thetaSpeed: 1.6,
          color: '#FF0000',
          //spinning: false,
          //clockwise: false
        }));
      // green 32 teeth
        gears.push(new gear({
          x: 331,
          y: 200,
          radiusO: 90,
          radiusI: 80,
          teethNUM: 32,
          theta: 0,
          thetaSpeed: 1,
          color: '#00FF00',
          //spinning: false,
          //clockwise: true
        }));
		//blue 5 teeth
		gears.push(new gear({
          x: 100, //231
          y: 100, // 205
          radiusO: 18,
          radiusI: 9,
          teethNUM: 5,
          theta: 0,
          thetaSpeed: 6.4,
          color: '#0000FF',
          spinning: true,
          clockwise: false
        }));
      var time = (new Date()).getTime();
      rotating(gears, time);
	  
	  window.addEventListener('keydown',this.check,false);
	  function check(evt) {
		var code = evt.keyCode;
		if(code == 37){
			gears[2].x += -5;
		}
		else if(code == 38){
			gears[2].y += -5;
		}
		else if(code == 39){
			gears[2].x += 5;
		}
		else if(code == 40){
			gears[2].y += 5;
		}
			var dx1 = (gears[0].x - gears[2].x);
			var dy1 = (gears[0].y - gears[2].y);
			var distance1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);
			var dx2 = (gears[1].x - gears[2].x);
			var dy2 = (gears[1].y - gears[2].y);
			var distance2 = Math.sqrt(dx2 * dx2 + dy2 * dy2);
			if(distance1 < gears[0].radiusO + gears[2].radiusO || distance2 < gears[1].radiusO + gears[2].radiusO){
				if(distance1 < gears[0].radiusO + gears[2].radiusO){
					gears[0].spinning = true;
					gears[1].spinning = true;
					gears[0].clockwise = true;
					gears[1].clockwise = false;
				}
				else{
					gears[0].spinning = true;
					gears[1].spinning = true;
					gears[0].clockwise = false;
					gears[1].clockwise = true;
				}
			}
			else{
				gears[0].spinning = false;
				gears[1].spinning = false;
			}
		}
	/*function collision(gears){
		var distance = Math.sqrt((gears[0].x - gears[2].x)^2 + (gears[0].y - gears[2].y)^2) - (gears[0].radiusO + gears[2].radiusO)	
		if(distance <= 0){
			gears[1].spinning = true;
			gears[1].clockwise = true;
			gears[2].spinning = true;
			gears[2].clockwise = false;
		}
	}*/
	/*gears[2].bind("EnterFrame", function(){
		for(i=0;i < 2; i++){
			var dx = (gears[i].x + gears[i].radiusO) - (gears[2].x + gears[2].radiusO);
			var dy = (gears[i].y + gears[i].radiusO) - (gears[2].y + gears[2].radiusO);
			var distance = Math.sqrt(dx * dx + dy * dy);
			if(distance < gears[i].radiusO + gears[2].radiusO){
				gears[0].spinning = true;
				gears[1].spinning = true;
			}
			else{
				gears[0].spinning = false;
				gears[1].spinning = false;
			}
		}
	});*/

	</script>
    <style>
      body,html{
        margin:0px;
        padding:0px;
      }
    </style>
</head>
<body>

</body>
</html>
