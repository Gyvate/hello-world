<html>
    <body>
        <script src="three.min.js"></script>

        <script>
            var camera, scene, renderer;
            init();
            animate();
            function init(){
                scene = new THREE.Scene();
                camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 1, 10000);
                camera.position.set(10000,100,10000);
                camera.lookAt(scene.position); 
                renderer = new THREE.WebGLRenderer();
                renderer.setSize(window.innerWidth, window.innerHeight)
                document.body.appendChild(renderer.domElement);
    
                var size = 32, step = 8;
                var geometry = new THREE.Geometry();
                var material = new THREE.LineBasicMaterial({color: 'green'});   
                for ( var i = - size; i <= size; i += step){
                    geometry.vertices.push(new THREE.Vector3( - size, 1, i ));
                    geometry.vertices.push(new THREE.Vector3( size, 1, i ));
   
                    geometry.vertices.push(new THREE.Vector3( i, 1, - size ));
                    geometry.vertices.push(new THREE.Vector3( i, 1, size ));
                }
                var pestininkas = new THREE.Object3D();
				var pestininkas1 = new THREE.Mesh(new THREE.CubeGeometry(5,1,5), new THREE.MeshNormalMaterial());
				pestininkas.add(pestininkas1);
				var pestininkas2 = new THREE.Mesh(new THREE.CubeGeometry(2,5,2), new THREE.MeshNormalMaterial());
				pestininkas.add(pestininkas2);
				var pestininkas3 = new THREE.Mesh(new THREE.CubeGeometry(3,3,3), new THREE.MeshNormalMaterial());
				pestininkas.add(pestininkas3);
				var pestininkas4 = new THREE.Mesh(new THREE.CubeGeometry(1.5,0.5,1.5), new THREE.MeshNormalMaterial());
				pestininkas.add(pestininkas4);
				pestininkas1.position.set(20,1.5,12);
				pestininkas2.position.set(20,3.5,12);
				pestininkas3.position.set(20,5.5,12);
				pestininkas4.position.set(20,7,12);
				//
				var bokstas = new THREE.Object3D();
				var bokstas1 = new THREE.Mesh(new THREE.CubeGeometry(5,1,5), new THREE.MeshNormalMaterial());
				bokstas.add(bokstas1);
				var bokstas2 = new THREE.Mesh(new THREE.CubeGeometry(2,5,2), new THREE.MeshNormalMaterial());
				bokstas.add(bokstas2);
				var bokstas3 = new THREE.Mesh(new THREE.CubeGeometry(5,5,5), new THREE.MeshNormalMaterial());
				bokstas.add(bokstas3);
				var bokstas4 = new THREE.Mesh(new THREE.CubeGeometry(1,1,1), new THREE.MeshNormalMaterial());
				bokstas.add(bokstas4);
				var bokstas5 = new THREE.Mesh(new THREE.CubeGeometry(1,1,1), new THREE.MeshNormalMaterial());
				bokstas.add(bokstas5);
				var bokstas6 = new THREE.Mesh(new THREE.CubeGeometry(1,1,1), new THREE.MeshNormalMaterial());
				bokstas.add(bokstas6);
				var bokstas7 = new THREE.Mesh(new THREE.CubeGeometry(1,1,1), new THREE.MeshNormalMaterial());
				bokstas.add(bokstas7);
				bokstas1.position.set(27.5,1.5,27.5);
				bokstas2.position.set(27.5,4,27.5);
				bokstas3.position.set(27.5,6,27.5);
				bokstas4.position.set(29.5,8.5,29.5);
				bokstas5.position.set(29.5,8.5,25.5);
				bokstas6.position.set(25.5,8.5,29.5);
				bokstas7.position.set(25.5,8.5,25.5);
				//
				var arklys11 = new THREE.Object3D();
				var arklys1 = new THREE.Mesh(new THREE.CubeGeometry(5,1,5), new THREE.MeshNormalMaterial());
				arklys.add(arklys1);
				var arklys2 = new THREE.Mesh(new THREE.CubeGeometry(2,7,2), new THREE.MeshNormalMaterial());
				arklys.add(arklys2);
				var arklys3 = new THREE.Mesh(new THREE.CubeGeometry(2,2,2), new THREE.MeshNormalMaterial());
				arklys.add(arklys3);
				var arklys4 = new THREE.Mesh(new THREE.CubeGeometry(2,2,2), new THREE.MeshNormalMaterial());
				arklys.add(arklys4);
				var arklys5 = new THREE.Mesh(new THREE.CubeGeometry(0.5,1,2), new THREE.MeshNormalMaterial());
				arklys.add(arklys5);
				arklys1.position.set(28,1.5,12);
				arklys2.position.set(29,5,12);
				arklys3.position.set(27,7,12);
				arklys4.position.set(26,6,12);
				arklys5.position.set(29,9,12);
				//
				var rikis = new THREE.Object3D();
				var rikis1 = new THREE.Mesh(new THREE.CubeGeometry(5,1,5), new THREE.MeshNormalMaterial());
				rikis.add(rikis1);
				var rikis2 = new THREE.Mesh(new THREE.CubeGeometry(2,9,2), new THREE.MeshNormalMaterial());
				rikis.add(rikis2);
				var rikis3 = new THREE.Mesh(new THREE.CubeGeometry(3,6,3), new THREE.MeshNormalMaterial());
				rikis.add(rikis3);
				var rikis4 = new THREE.Mesh(new THREE.CubeGeometry(1,1,1), new THREE.MeshNormalMaterial());
				rikis.add(rikis4);

				rikis1.position.set(28,1.5,20);
				rikis2.position.set(28,6,20);
				rikis3.position.set(28,5,20);
				rikis4.position.set(28,11,20);
				//
				var karaliene = new THREE.Object3D();
				var karaliene1 = new THREE.Mesh(new THREE.CubeGeometry(5,1,5), new THREE.MeshNormalMaterial());
				karaliene.add(karaliene1);
				var karaliene2 = new THREE.Mesh(new THREE.CubeGeometry(2,10,2), new THREE.MeshNormalMaterial());
				karaliene.add(karaliene2);
				var karaliene3 = new THREE.Mesh(new THREE.CubeGeometry(3,5,3), new THREE.MeshNormalMaterial());
				karaliene.add(karaliene3);
				var karaliene4 = new THREE.Mesh(new THREE.CubeGeometry(4,1,4), new THREE.MeshNormalMaterial());
				karaliene.add(karaliene4);
				var karaliene5 = new THREE.Mesh(new THREE.CubeGeometry(1,3,1), new THREE.MeshNormalMaterial());
				karaliene.add(karaliene5);
				karaliene1.position.set(28,1.5,4);
				karaliene2.position.set(28,6,4);
				karaliene3.position.set(28,6,4);
				karaliene4.position.set(28,9,4);
				karaliene5.position.set(28,11,4);
				//
				var karalius = new THREE.Object3D();
				var karalius1 = new THREE.Mesh(new THREE.CubeGeometry(5,1,5), new THREE.MeshNormalMaterial());
				karalius.add(karalius1);
				var karalius2 = new THREE.Mesh(new THREE.CubeGeometry(2,10,2), new THREE.MeshNormalMaterial());
				karalius.add(karalius2);
				var karalius3 = new THREE.Mesh(new THREE.CubeGeometry(3,5,3), new THREE.MeshNormalMaterial());
				karalius.add(karalius3);
				var karalius4 = new THREE.Mesh(new THREE.CubeGeometry(4,2,4), new THREE.MeshNormalMaterial());
				karalius.add(karalius4);
				var karalius5 = new THREE.Mesh(new THREE.CubeGeometry(4.5,1,4.5), new THREE.MeshNormalMaterial());
				karalius.add(karalius5);
				var karalius6 = new THREE.Mesh(new THREE.CubeGeometry(1,5,1), new THREE.MeshNormalMaterial());
				karalius.add(karalius6);
				var karalius7 = new THREE.Mesh(new THREE.CubeGeometry(1,1,3), new THREE.MeshNormalMaterial());
				karalius.add(karalius7);
				karalius1.position.set(28,1.5,-4);
				karalius2.position.set(28,6,-4);
				karalius3.position.set(28,6,-4);
				karalius4.position.set(28,9,-4);
				karalius5.position.set(28,10,-4);
				karalius6.position.set(28,11,-4);
				karalius7.position.set(28,12.5,-4);
				//
                var line = new THREE.Line( geometry, material, THREE.LinePieces);
                scene.add(line);
                scene.add(pestininkas);
                scene.add(bokstas);
                scene.add(arklys);
                scene.add(rikis);
                scene.add(karaliene);
                scene.add(karalius);
 
                render();
            }
            function animate(){
                requestAnimationFrame( animate );
                render();
            }
            function render() {
                
                var timer = Date.now() * 0.0002;
            
                camera.position.x = Math.cos( timer ) * 10;
                camera.position.z = Math.sin( timer ) * 10;
    
                camera.lookAt( scene.position );
                renderer.render( scene, camera );
            }
        </script>
    </body>
</html>
